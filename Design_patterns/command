//Receiver class
 
public interface FileSystemReceiver {
 
    void openFile();
    void writeFile();
    void closeFile();
}

//Implementing receiver class
public class UnixFileSystemReceiver implements FileSystemReceiver {
 
    @Override
    public void openFile() {
        System.out.println("Opening file in unix OS");
    }
 
    @Override
    public void writeFile() {
        System.out.println("Writing file in unix OS");
    }
 
    @Override
    public void closeFile() {
        System.out.println("Closing file in unix OS");
    }
 
}

//Implementing receiver class
public class WindowsFileSystemReceiver implements FileSystemReceiver {
 
    @Override
    public void openFile() {
        System.out.println("Opening file in Windows OS");
         
    }
 
    @Override
    public void writeFile() {
        System.out.println("Writing file in Windows OS");
    }
 
    @Override
    public void closeFile() {
        System.out.println("Closing file in Windows OS");
    }
 
}

//command interface

public interface Command {
 
    void execute();
}

//
public class OpenFileCommand implements Command {
 
    private FileSystemReceiver fileSystem;
     
    public OpenFileCommand(FileSystemReceiver fs){
        this.fileSystem=fs;
    }
    @Override
    public void execute() {
        //open command is forwarding request to openFile method
        this.fileSystem.openFile();
    }
 
}

public class CloseFileCommand implements Command {
 
    private FileSystemReceiver fileSystem;
     
    public CloseFileCommand(FileSystemReceiver fs){
        this.fileSystem=fs;
    }
    @Override
    public void execute() {
        this.fileSystem.closeFile();
    }
 
}

//write file command

public class WriteFileCommand implements Command {
 
    private FileSystemReceiver fileSystem;
     
    public WriteFileCommand(FileSystemReceiver fs){
        this.fileSystem=fs;
    }
    @Override
    public void execute() {
        this.fileSystem.writeFile();
    }
 
}

//File invoker class

public class FileInvoker {
 
    public Command command;
     
    public FileInvoker(Command c){
        this.command=c;
    }
     
    public void execute(){
        this.command.execute();
    }
}

//client file system
public class FileSystemClient {
 
    public static void main(String[] args) {
        //Creating the receiver object
        FileSystemReceiver fs = FileSystemReceiverUtil.getUnderlyingFileSystem();
         
        //creating command and associating with receiver
        OpenFileCommand openFileCommand = new OpenFileCommand(fs);
         
        //Creating invoker and associating with Command
        FileInvoker file = new FileInvoker(openFileCommand);
         
        //perform action on invoker object
        file.execute();
         
        WriteFileCommand writeFileCommand = new WriteFileCommand(fs);
        file = new FileInvoker(writeFileCommand);
        file.execute();
         
        CloseFileCommand closeFileCommand = new CloseFileCommand(fs);
        file = new FileInvoker(closeFileCommand);
        file.execute();
    }
 
}
